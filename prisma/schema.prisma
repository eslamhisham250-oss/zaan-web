// prisma/schema.prisma

datasource db {
  provider = "sqlite" // أو mysql/postgresql حسب اللي بتستخدمه
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/* ============ User & Auth ============ */
model User {
  id        String    @id @default(cuid())
  name      String?
  email     String    @unique
  phone     String?
  password  String
  addresses Address[]
  orders    Order[]
  accounts  Account[]
  sessions  Session[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/* ============ Products ============ */
model Product {
  id        String   @id @default(cuid())
  title     String
  short     String?
  price     Int
  image     String?
  material  String?
  category  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/* ============ Orders ============ */
model Order {
  id        String      @id @default(cuid())
  userId    String?
  user      User?       @relation(fields: [userId], references: [id], onDelete: Cascade)
  total     Int
  status    String      @default("pending")
  note      String?
  createdAt DateTime    @default(now())
  items     OrderItem[]
  
  // بيانات العميل (لو مش عامل login)
  address   String
  phone     String
  name      String
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  title     String
  price     Int
  qty       Int
}

/* ============ Address ============ */
model Address {
  id        String  @id @default(cuid())
  userId    String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  label     String?
  address   String
  phone     String?
  createdAt DateTime @default(now())
}
